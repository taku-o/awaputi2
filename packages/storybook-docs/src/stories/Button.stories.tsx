import type { Meta, StoryObj } from '@storybook/react';
import { Button } from '@bubblepop/ui-library';

const meta: Meta<typeof Button> = {
  title: 'Components/Button',
  component: Button,
  parameters: {
    layout: 'centered',
    docs: {
      description: {
        component: 'Ê±éÁî®ÁöÑ„Å™„Éú„Çø„É≥„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÄÇ„Ç≤„Éº„É†ÂÜÖ„ÅÆÊßò„ÄÖ„Å™„Ç¢„ÇØ„Ç∑„Éß„É≥„Å´‰ΩøÁî®„Åï„Çå„Åæ„Åô„ÄÇ'
      }
    }
  },
  tags: ['autodocs'],
  argTypes: {
    variant: {
      control: { type: 'select' },
      options: ['primary', 'secondary', 'icon'],
      description: '„Éú„Çø„É≥„ÅÆ„Éê„É™„Ç®„Éº„Ç∑„Éß„É≥„ÄÇprimaryÔºà‰∏ªË¶Å„Ç¢„ÇØ„Ç∑„Éß„É≥Ôºâ„ÄÅsecondaryÔºàÂâØÊ¨°ÁöÑ„Ç¢„ÇØ„Ç∑„Éß„É≥Ôºâ„ÄÅiconÔºà„Ç¢„Ç§„Ç≥„É≥„Éú„Çø„É≥Ôºâ„Åã„ÇâÈÅ∏Êäû',
      table: {
        type: { summary: 'primary | secondary | icon' },
        defaultValue: { summary: 'primary' },
      },
    },
    size: {
      control: { type: 'select' },
      options: ['small', 'medium', 'large'],
      description: '„Éú„Çø„É≥„ÅÆ„Çµ„Ç§„Ç∫„ÄÇsmall„ÄÅmedium„ÄÅlarge„Åã„ÇâÈÅ∏Êäû',
      table: {
        type: { summary: 'small | medium | large' },
        defaultValue: { summary: 'medium' },
      },
    },
    type: {
      control: { type: 'select' },
      options: ['button', 'submit', 'reset'],
      defaultValue: 'button',
      description: 'HTML button„ÅÆtypeÂ±ûÊÄß',
      table: {
        type: { summary: 'button | submit | reset' },
        defaultValue: { summary: 'button' },
      },
    },
    disabled: {
      control: { type: 'boolean' },
      description: '„Éú„Çø„É≥„ÇíÁÑ°ÂäπÂåñ„Åô„Çã„Åã„Å©„ÅÜ„Åã',
      table: {
        type: { summary: 'boolean' },
        defaultValue: { summary: 'false' },
      },
    },
    fullWidth: {
      control: { type: 'boolean' },
      description: '„Éú„Çø„É≥„ÇíË¶™Ë¶ÅÁ¥†„ÅÆÂπÖ„ÅÑ„Å£„Å±„ÅÑ„Å´Â∫É„Åí„Çã„Åã„Å©„ÅÜ„Åã',
      table: {
        type: { summary: 'boolean' },
        defaultValue: { summary: 'false' },
      },
    },
    startIcon: {
      control: { type: 'text' },
      description: '„Éú„Çø„É≥„ÉÜ„Ç≠„Çπ„Éà„ÅÆÂâç„Å´Ë°®Á§∫„Åô„Çã„Ç¢„Ç§„Ç≥„É≥',
      table: {
        type: { summary: 'ReactNode' },
      },
    },
    endIcon: {
      control: { type: 'text' },
      description: '„Éú„Çø„É≥„ÉÜ„Ç≠„Çπ„Éà„ÅÆÂæå„Å´Ë°®Á§∫„Åô„Çã„Ç¢„Ç§„Ç≥„É≥',
      table: {
        type: { summary: 'ReactNode' },
      },
    },
    onClick: { 
      action: 'clicked',
      description: '„ÇØ„É™„ÉÉ„ÇØÊôÇ„ÅÆ„Ç§„Éô„É≥„Éà„Éè„É≥„Éâ„É©',
      table: {
        type: { summary: '() => void' },
      },
    },
    children: {
      description: '„Éú„Çø„É≥„Å´Ë°®Á§∫„Åô„Çã„Ç≥„É≥„ÉÜ„É≥„ÉÑ',
      table: {
        type: { summary: 'ReactNode' },
      },
    },
  },
};

export default meta;
type Story = StoryObj<typeof meta>;

export const Primary: Story = {
  args: {
    variant: 'primary',
    children: 'Primary Button',
  },
  parameters: {
    docs: {
      description: {
        story: '‰∏ªË¶Å„Å™„Ç¢„ÇØ„Ç∑„Éß„É≥„Å´‰ΩøÁî®„Åô„Çã„Éó„É©„Ç§„Éû„É™„Éú„Çø„É≥„ÄÇ„Ç≤„Éº„É†ÈñãÂßã„ÄÅ„Çπ„ÉÜ„Éº„Ç∏ÈÅ∏Êäû„Å™„Å©„ÅÆÈáçË¶Å„Å™Êìç‰Ωú„Å´‰ΩøÁî®„Åï„Çå„Åæ„Åô„ÄÇ',
      },
    },
  },
};

export const Secondary: Story = {
  args: {
    variant: 'secondary',
    children: 'Secondary Button',
  },
  parameters: {
    docs: {
      description: {
        story: 'ÂâØÊ¨°ÁöÑ„Å™„Ç¢„ÇØ„Ç∑„Éß„É≥„Å´‰ΩøÁî®„Åô„Çã„Çª„Ç´„É≥„ÉÄ„É™„Éú„Çø„É≥„ÄÇ„Ç≠„É£„É≥„Çª„É´„ÄÅÊàª„Çã„Å™„Å©„ÅÆË£úÂä©ÁöÑ„Å™Êìç‰Ωú„Å´‰ΩøÁî®„Åï„Çå„Åæ„Åô„ÄÇ',
      },
    },
  },
};

export const Icon: Story = {
  args: {
    variant: 'icon',
    children: 'üéÆ',
  },
  parameters: {
    docs: {
      description: {
        story: '„Ç¢„Ç§„Ç≥„É≥„ÅÆ„Åø„ÇíË°®Á§∫„Åô„Çã„Éú„Çø„É≥„ÄÇË®≠ÂÆö„ÄÅ„Éò„É´„Éó„Å™„Å©„ÅÆ„Ç¢„Ç§„Ç≥„É≥„Ç¢„ÇØ„Ç∑„Éß„É≥„Å´‰ΩøÁî®„Åï„Çå„Åæ„Åô„ÄÇ',
      },
    },
  },
};

export const Disabled: Story = {
  args: {
    variant: 'primary',
    disabled: true,
    children: 'Disabled Button',
  },
  parameters: {
    docs: {
      description: {
        story: 'ÁÑ°ÂäπÂåñ„Åï„Çå„Åü„Éú„Çø„É≥„ÄÇÊù°‰ª∂„ÇíÊ∫Ä„Åü„Åï„Å™„ÅÑÂ†¥Âêà„ÇÑÂá¶ÁêÜ‰∏≠„Å™„Å©„Åß„Ç¢„ÇØ„Ç∑„Éß„É≥„ÇíÂà∂Èôê„Åô„ÇãÈöõ„Å´‰ΩøÁî®„Åï„Çå„Åæ„Åô„ÄÇ',
      },
    },
  },
};

export const FullWidth: Story = {
  args: {
    variant: 'primary',
    fullWidth: true,
    children: 'Full Width Button',
  },
  parameters: {
    layout: 'fullscreen',
    docs: {
      description: {
        story: 'Ë¶™Ë¶ÅÁ¥†„ÅÆÂπÖ„ÅÑ„Å£„Å±„ÅÑ„Å´Â∫É„Åå„Çã„Éú„Çø„É≥„ÄÇ„É¢„Éê„Ç§„É´ÁîªÈù¢„ÇÑ„É¢„Éº„ÉÄ„É´ÂÜÖ„Åß„ÅÆ‰∏ªË¶Å„Ç¢„ÇØ„Ç∑„Éß„É≥„Å™„Å©„Å´‰ΩøÁî®„Åï„Çå„Åæ„Åô„ÄÇ',
      },
    },
  },
  decorators: [
    (Story) => (
      <div style={{ width: '100%', padding: '20px', backgroundColor: '#f0f0f0' }}>
        <Story />
      </div>
    ),
  ],
};